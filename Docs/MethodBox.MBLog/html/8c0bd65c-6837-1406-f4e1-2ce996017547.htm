<!DOCTYPE html ><html lang="zh-CN"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><link rel="stylesheet" href="../css/zh-CN.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>WebRequest.SendLogStringAsync 方法</title><meta name="Title" content="SendLogStringAsync" /><meta name="Help.Id" content="M:MethodBox.MBLog.Web.WebRequest.SendLogStringAsync(System.String,System.String)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="MethodBox.MBLog.Web" /><meta name="guid" content="8c0bd65c-6837-1406-f4e1-2ce996017547" /><meta name="Description" content="以异步Post模式发送指定的日志内容。" /><meta name="tocFile" content="../toc/IDBAD.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">MethodBox.MBLog Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Web<wbr />Request<span id="LSTF62CAC62_0" data-languageSpecificText="cpp=::|nu=."></span>Send<wbr />Log<wbr />String<wbr />Async 方法</h1><div class="summary">
            以异步<span class="code">Post</span>模式发送指定的日志内容。
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>命名空间：</strong> <a href="7e2aedde-b8a6-0291-8ec5-69ac981d825e.htm">MethodBox.MBLog.Web</a><br /><strong>程序集：</strong> MethodBox.MBLog (在 MethodBox.MBLog.dll 中) 版本：1.0.4<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">SendLogStringAsync</span>(
	<span class="identifier">string</span> <span class="parameter">key</span>,
	<span class="identifier">string</span> <span class="parameter">content</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">SendLogStringAsync</span> ( 
	<span class="parameter">key</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">content</span> <span class="keyword">As</span> <span class="identifier">String</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">void</span> <span class="identifier">SendLogStringAsync</span>(
	<span class="identifier">String</span>^ <span class="parameter">key</span>, 
	<span class="identifier">String</span>^ <span class="parameter">content</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">member</span> <span class="identifier">SendLogStringAsync</span> : 
        <span class="parameter">key</span> : <span class="identifier">string</span> * 
        <span class="parameter">content</span> : <span class="identifier">string</span> <span class="keyword">-&gt;</span> <span class="keyword">unit</span> </code></pre></div></div><h4>参数</h4><dl><dt class="has-text-weight-normal"><span class="parameter">key</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>发起请求的参数名</dd><dt class="has-text-weight-normal"><span class="parameter">content</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>发起请求的参数内容</dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>示例</h2><div id="IDDCSection">
            以下示例将日志内容异步上传至服务器，并以日志的形式通知上传结果。
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="复制"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>复制</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">// 构建日志字符串
Interfaces.ILogger loggerInstance =
MBLog.Logger.GetLoggerInstance(DataType.LogFileType.TextFile,@"D:\Log");
Logger Logger = (MBLog.Logger)loggerInstance;
string logResult =
Logger.BuildLogString(DataType.LogType.Warning, new DataType.LogStruct(
    new[] { "Console" }, "nm$l", true, true
));
// 建立网络实例化对象
WebRequest WebSender = new WebRequest(new Uri(@"https:icalloptions.top/data"));
// 订阅相关事件
WebSender.OnDataSendFinished += (s, e) =&gt;
{
#if NET6_0_OR_GREATER
    ArgumentNullException.ThrowIfNull(e.Response);
#else
    if (e.Response is null)
    {
        throw new ArgumentException("服务器未返回");
    }
#endif
    DataType.LogStruct webLogStruct = new DataType.LogStruct();
    webLogStruct.LogInfo = e.Response;
    webLogStruct.CallerInfoStrings = new[] { "Console", "WebRequest" };
    webLogStruct.Print = true;
    webLogStruct.Save = true;
    // 作为演示，假设成功返回OK，失败返回FAILED
    DataType.LogType logType = e.Response switch
    {
        "OK" =&gt; DataType.LogType.Information,
        "FAILED" =&gt; DataType.LogType.Warning,
        _ =&gt; throw new NotImplementedException("未实现对该返回值的处理！")
    };
    Logger.Log(logType, webLogStruct);
};
// 发送信息
WebSender.SendLogStringAsync("LogContent",logResult);</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>异常</h2><div id="IDECSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td>（仅限于.Net6.0及以上SDK版本）当传入的参数为<span class="code">null</span>时引发此异常。</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>参见</h2><div id="seeAlsoSection"><h4>引用</h4><div><a href="8e2c5b1d-347c-f8bb-f9d0-2e1358873664.htm">WebRequest 类</a></div><div><a href="7e2aedde-b8a6-0291-8ec5-69ac981d825e.htm">MethodBox.MBLog.Web 命名空间</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">示例</a></li><li><a class="quickLink">异常</a></li><li><a class="quickLink">参见</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>